{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee-form/employee-form.component.css","webpack:///./src/app/employee-form/employee-form.component.html","webpack:///./src/app/employee-form/employee-form.component.ts","webpack:///./src/app/employee.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,0F;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPqB;AACY;AACX;AAEC;AACgC;AAchF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;aACZ;YACD,YAAY,EAAE;gBACZ,2DAAY;gBACZ,4FAAqB;aACtB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAE,2DAAY,CAAE;SAC5B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBtB,mB;;;;;;;;;;;ACAA,6xCAA6xC,GAAG,qPAAqP,0QAA0Q,YAAY,4IAA4I,cAAc,gJAAgJ,qBAAqB,wIAAwI,aAAa,wI;;;;;;;;;;;;;;;;;;;;;;ACArtE;AAEA;AAO1C;IALA;QAOE,QAAG,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAEzB,UAAK,GAAG,IAAI,kDAAQ,CAAC,CAAC,EAAE,QAAQ,EAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAIzD,cAAS,GAAG,KAAK,CAAC;IAOpB,CAAC;IAVC,2CAAW,GAAX;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,kDAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAGD,wCAAQ,GAAR;QAAa,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;IAAC,CAAC;IAGlB,sBAAI,6CAAU;QADd,oCAAoC;aACpC,cAAmB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAd5C,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;OACW,qBAAqB,CAejC;IAAD,4BAAC;CAAA;AAfiC;;;;;;;;;;;;;;ACTlC;AAAA;IAEI,kBACS,EAAU,EACV,IAAY,EACZ,WAAmB,EACnB,GAAY;QAHZ,OAAE,GAAF,EAAE,CAAQ;QACV,SAAI,GAAJ,IAAI,CAAQ;QACZ,gBAAW,GAAX,WAAW,CAAQ;QACnB,QAAG,GAAH,GAAG,CAAS;IAChB,CAAC;IAER,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACTH;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<title>Employee Form</title>\\r\\n<app-employee-form></app-employee-form>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule }   from '@angular/forms';\n\nimport { AppComponent }  from './app.component';\nimport { EmployeeFormComponent } from './employee-form/employee-form.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  declarations: [\n    AppComponent,\n    EmployeeFormComponent\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div [hidden]=\\\"submitted\\\">\\n    <h1>Employee Form</h1>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #employeeForm=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n        required\\n        [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\"\\n            #name=\\\"ngModel\\\">\\n        <div [hidden]=\\\"name.valid || name.pristine\\\"\\n        class=\\\"alert alert-danger\\\">\\n          Forgot your name? We will be waiting until you remember it..\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"family-name\\\">Family Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"family-name\\\"\\n        required\\n        [(ngModel)]=\\\"model.family_name\\\" name=\\\"family_name\\\" #familyName=\\\"ngModel\\\">\\n        <div [hidden]=\\\"familyName.valid || familyName.pristine\\\"\\n      class=\\\"alert alert-danger\\\">\\n          Family name is not optional mate!\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"sex\\\">Sex</label>\\n        <select class=\\\"form-control\\\" id=\\\"sex\\\" required [(ngModel)]=\\\"model.sex\\\" name=\\\"sex\\\">\\n          \\n          <option *ngFor=\\\"let s of sex\\\" [value]=\\\"s\\\">{{s}}</option>\\n        </select>\\n      </div>\\n      \\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!employeeForm.form.valid\\\">Submit</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"newEmployee(); employeeForm.reset()\\\">New Employee</button>\\n    </form>\\n  </div>\\n  <div [hidden]=\\\"!submitted\\\">\\n      <h2>You submitted the following:</h2>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-3\\\">ID</div>\\n          <div class=\\\"col-xs-9  pull-left\\\">{{ model.id }}</div>\\n        </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\">Name</div>\\n        <div class=\\\"col-xs-9  pull-left\\\">{{ model.name }}</div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\">Family Name</div>\\n        <div class=\\\"col-xs-9 pull-left\\\">{{ model.family_name }}</div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\">Sex</div>\\n        <div class=\\\"col-xs-9 pull-left\\\">{{ model.sex }}</div>\\n      </div>\\n      <br>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"submitted=false\\\">Edit</button>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\n\nimport { Employee }    from '../employee';\n\n@Component({\n  selector: 'app-employee-form',\n  templateUrl: './employee-form.component.html',\n  styleUrls: ['./employee-form.component.css']\n})\nexport class EmployeeFormComponent {\n\n  sex = ['Male', 'Female'];\n\n  model = new Employee(0, 'Foulan','Foulani', this.sex[0]);\n  newEmployee() {\n    this.model = new Employee(42, '', '',this.sex[0]);\n  }\n  submitted = false;\n\n  onSubmit() { this.submitted = true;\n  this.model.id++; }\n\n  // TODO: Remove this when we're done\n  get diagnostic() { return JSON.stringify(this.model); }\n}","export class Employee {\n\n    constructor(\n      public id: number,\n      public name: string,\n      public family_name: string,\n      public sex?: string\n    ) {  }\n  \n  }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}